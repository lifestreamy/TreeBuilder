[{"name":"abstract class NodeContext<T>","description":"com.github.treeBuilder.dsl.NodeContext","location":"-tree-builder/com.github.treeBuilder.dsl/-node-context/index.html","searchKeys":["NodeContext","abstract class NodeContext<T>","com.github.treeBuilder.dsl.NodeContext"]},{"name":"abstract val attributes: List<T>","description":"com.github.treeBuilder.dsl.NodeContext.attributes","location":"-tree-builder/com.github.treeBuilder.dsl/-node-context/attributes.html","searchKeys":["attributes","abstract val attributes: List<T>","com.github.treeBuilder.dsl.NodeContext.attributes"]},{"name":"abstract val name: String","description":"com.github.treeBuilder.dsl.NodeContext.name","location":"-tree-builder/com.github.treeBuilder.dsl/-node-context/name.html","searchKeys":["name","abstract val name: String","com.github.treeBuilder.dsl.NodeContext.name"]},{"name":"annotation class NodeContextMarker","description":"com.github.treeBuilder.dsl.NodeContextMarker","location":"-tree-builder/com.github.treeBuilder.dsl/-node-context-marker/index.html","searchKeys":["NodeContextMarker","annotation class NodeContextMarker","com.github.treeBuilder.dsl.NodeContextMarker"]},{"name":"annotation class RootDslMarker","description":"com.github.treeBuilder.dsl.RootDslMarker","location":"-tree-builder/com.github.treeBuilder.dsl/-root-dsl-marker/index.html","searchKeys":["RootDslMarker","annotation class RootDslMarker","com.github.treeBuilder.dsl.RootDslMarker"]},{"name":"annotation class TreeDslMarker","description":"com.github.treeBuilder.dsl.TreeDslMarker","location":"-tree-builder/com.github.treeBuilder.dsl/-tree-dsl-marker/index.html","searchKeys":["TreeDslMarker","annotation class TreeDslMarker","com.github.treeBuilder.dsl.TreeDslMarker"]},{"name":"class RootNodeContext<T>","description":"com.github.treeBuilder.dsl.RootNodeContext","location":"-tree-builder/com.github.treeBuilder.dsl/-root-node-context/index.html","searchKeys":["RootNodeContext","class RootNodeContext<T>","com.github.treeBuilder.dsl.RootNodeContext"]},{"name":"class Tree<T>","description":"com.github.treeBuilder.Tree","location":"-tree-builder/com.github.treeBuilder/-tree/index.html","searchKeys":["Tree","class Tree<T>","com.github.treeBuilder.Tree"]},{"name":"class TreeBuilderContext<T>","description":"com.github.treeBuilder.dsl.TreeBuilderContext","location":"-tree-builder/com.github.treeBuilder.dsl/-tree-builder-context/index.html","searchKeys":["TreeBuilderContext","class TreeBuilderContext<T>","com.github.treeBuilder.dsl.TreeBuilderContext"]},{"name":"class TreeNodeContext<T> : NodeContext<T> ","description":"com.github.treeBuilder.dsl.TreeNodeContext","location":"-tree-builder/com.github.treeBuilder.dsl/-tree-node-context/index.html","searchKeys":["TreeNodeContext","class TreeNodeContext<T> : NodeContext<T> ","com.github.treeBuilder.dsl.TreeNodeContext"]},{"name":"constructor()","description":"com.github.treeBuilder.Tree.Tree","location":"-tree-builder/com.github.treeBuilder/-tree/-tree.html","searchKeys":["Tree","constructor()","com.github.treeBuilder.Tree.Tree"]},{"name":"constructor()","description":"com.github.treeBuilder.dsl.NodeContext.NodeContext","location":"-tree-builder/com.github.treeBuilder.dsl/-node-context/-node-context.html","searchKeys":["NodeContext","constructor()","com.github.treeBuilder.dsl.NodeContext.NodeContext"]},{"name":"constructor(name: String = \"\", attributes: List<T> = listOf())","description":"com.github.treeBuilder.TreeNode.TreeNode","location":"-tree-builder/com.github.treeBuilder/-tree-node/-tree-node.html","searchKeys":["TreeNode","constructor(name: String = \"\", attributes: List<T> = listOf())","com.github.treeBuilder.TreeNode.TreeNode"]},{"name":"constructor(root: TreeNode<T>)","description":"com.github.treeBuilder.Tree.Tree","location":"-tree-builder/com.github.treeBuilder/-tree/-tree.html","searchKeys":["Tree","constructor(root: TreeNode<T>)","com.github.treeBuilder.Tree.Tree"]},{"name":"constructor(treeName: String)","description":"com.github.treeBuilder.Tree.Tree","location":"-tree-builder/com.github.treeBuilder/-tree/-tree.html","searchKeys":["Tree","constructor(treeName: String)","com.github.treeBuilder.Tree.Tree"]},{"name":"data class Path","description":"com.github.treeBuilder.Path","location":"-tree-builder/com.github.treeBuilder/-path/index.html","searchKeys":["Path","data class Path","com.github.treeBuilder.Path"]},{"name":"data class TreeNode<T>(var name: String = \"\", var attributes: List<T> = listOf())","description":"com.github.treeBuilder.TreeNode","location":"-tree-builder/com.github.treeBuilder/-tree-node/index.html","searchKeys":["TreeNode","data class TreeNode<T>(var name: String = \"\", var attributes: List<T> = listOf())","com.github.treeBuilder.TreeNode"]},{"name":"fun <T> NodeList<T>.printNodesWithDepth()","description":"com.github.treeBuilder.printNodesWithDepth","location":"-tree-builder/com.github.treeBuilder/print-nodes-with-depth.html","searchKeys":["printNodesWithDepth","fun <T> NodeList<T>.printNodesWithDepth()","com.github.treeBuilder.printNodesWithDepth"]},{"name":"fun <T> Tree<T>.getStringPath(vararg path: Int): String","description":"com.github.treeBuilder.getStringPath","location":"-tree-builder/com.github.treeBuilder/get-string-path.html","searchKeys":["getStringPath","fun <T> Tree<T>.getStringPath(vararg path: Int): String","com.github.treeBuilder.getStringPath"]},{"name":"fun <T> Tree<T>.printLeavesWithDepth()","description":"com.github.treeBuilder.printLeavesWithDepth","location":"-tree-builder/com.github.treeBuilder/print-leaves-with-depth.html","searchKeys":["printLeavesWithDepth","fun <T> Tree<T>.printLeavesWithDepth()","com.github.treeBuilder.printLeavesWithDepth"]},{"name":"fun <T> Tree<T>.visualizeTree()","description":"com.github.treeBuilder.visualizeTree","location":"-tree-builder/com.github.treeBuilder/visualize-tree.html","searchKeys":["visualizeTree","fun <T> Tree<T>.visualizeTree()","com.github.treeBuilder.visualizeTree"]},{"name":"fun <T> TreeNode<T>.getAllBelow(): NodeList<T>","description":"com.github.treeBuilder.getAllBelow","location":"-tree-builder/com.github.treeBuilder/get-all-below.html","searchKeys":["getAllBelow","fun <T> TreeNode<T>.getAllBelow(): NodeList<T>","com.github.treeBuilder.getAllBelow"]},{"name":"fun <T> TreeNode<T>.getAllLeaves(): NodeList<T>","description":"com.github.treeBuilder.getAllLeaves","location":"-tree-builder/com.github.treeBuilder/get-all-leaves.html","searchKeys":["getAllLeaves","fun <T> TreeNode<T>.getAllLeaves(): NodeList<T>","com.github.treeBuilder.getAllLeaves"]},{"name":"fun <T> TreeNode<T>.getStringPath(vararg path: Int): String","description":"com.github.treeBuilder.getStringPath","location":"-tree-builder/com.github.treeBuilder/get-string-path.html","searchKeys":["getStringPath","fun <T> TreeNode<T>.getStringPath(vararg path: Int): String","com.github.treeBuilder.getStringPath"]},{"name":"fun <T> TreeNode<T>.getStringPathFromRoot(): String","description":"com.github.treeBuilder.getStringPathFromRoot","location":"-tree-builder/com.github.treeBuilder/get-string-path-from-root.html","searchKeys":["getStringPathFromRoot","fun <T> TreeNode<T>.getStringPathFromRoot(): String","com.github.treeBuilder.getStringPathFromRoot"]},{"name":"fun <T> tree(init: TreeBuilderContext<T>.() -> Unit): Tree<T>","description":"com.github.treeBuilder.dsl.tree","location":"-tree-builder/com.github.treeBuilder.dsl/tree.html","searchKeys":["tree","fun <T> tree(init: TreeBuilderContext<T>.() -> Unit): Tree<T>","com.github.treeBuilder.dsl.tree"]},{"name":"fun appendChild(name: String, attributes: List<T> = listOf()): TreeNode<T>","description":"com.github.treeBuilder.TreeNode.appendChild","location":"-tree-builder/com.github.treeBuilder/-tree-node/append-child.html","searchKeys":["appendChild","fun appendChild(name: String, attributes: List<T> = listOf()): TreeNode<T>","com.github.treeBuilder.TreeNode.appendChild"]},{"name":"fun appendChild(node: TreeNode<T>): TreeNode<T>","description":"com.github.treeBuilder.TreeNode.appendChild","location":"-tree-builder/com.github.treeBuilder/-tree-node/append-child.html","searchKeys":["appendChild","fun appendChild(node: TreeNode<T>): TreeNode<T>","com.github.treeBuilder.TreeNode.appendChild"]},{"name":"fun appendChildren(children: NodeList<T>): TreeNode<T>","description":"com.github.treeBuilder.TreeNode.appendChildren","location":"-tree-builder/com.github.treeBuilder/-tree-node/append-children.html","searchKeys":["appendChildren","fun appendChildren(children: NodeList<T>): TreeNode<T>","com.github.treeBuilder.TreeNode.appendChildren"]},{"name":"fun appendEmptyChildren(names: List<String>): TreeNode<T>","description":"com.github.treeBuilder.TreeNode.appendEmptyChildren","location":"-tree-builder/com.github.treeBuilder/-tree-node/append-empty-children.html","searchKeys":["appendEmptyChildren","fun appendEmptyChildren(names: List<String>): TreeNode<T>","com.github.treeBuilder.TreeNode.appendEmptyChildren"]},{"name":"fun appendEmptyChildren(vararg names: String): TreeNode<T>","description":"com.github.treeBuilder.TreeNode.appendEmptyChildren","location":"-tree-builder/com.github.treeBuilder/-tree-node/append-empty-children.html","searchKeys":["appendEmptyChildren","fun appendEmptyChildren(vararg names: String): TreeNode<T>","com.github.treeBuilder.TreeNode.appendEmptyChildren"]},{"name":"fun appendEmptyNamedToPaths(vararg namesPathPair: Pair<List<String>, List<Int>>): Int","description":"com.github.treeBuilder.Tree.appendEmptyNamedToPaths","location":"-tree-builder/com.github.treeBuilder/-tree/append-empty-named-to-paths.html","searchKeys":["appendEmptyNamedToPaths","fun appendEmptyNamedToPaths(vararg namesPathPair: Pair<List<String>, List<Int>>): Int","com.github.treeBuilder.Tree.appendEmptyNamedToPaths"]},{"name":"fun appendEmptyNamedToPathsStrict(vararg namesPathPair: Pair<List<String>, List<Int>>): Boolean","description":"com.github.treeBuilder.Tree.appendEmptyNamedToPathsStrict","location":"-tree-builder/com.github.treeBuilder/-tree/append-empty-named-to-paths-strict.html","searchKeys":["appendEmptyNamedToPathsStrict","fun appendEmptyNamedToPathsStrict(vararg namesPathPair: Pair<List<String>, List<Int>>): Boolean","com.github.treeBuilder.Tree.appendEmptyNamedToPathsStrict"]},{"name":"fun appendNode(node: TreeNode<T>, vararg path: Int): Boolean","description":"com.github.treeBuilder.Tree.appendNode","location":"-tree-builder/com.github.treeBuilder/-tree/append-node.html","searchKeys":["appendNode","fun appendNode(node: TreeNode<T>, vararg path: Int): Boolean","com.github.treeBuilder.Tree.appendNode"]},{"name":"fun appendNodes(nodes: NodeList<T>, vararg path: Int): Boolean","description":"com.github.treeBuilder.Tree.appendNodes","location":"-tree-builder/com.github.treeBuilder/-tree/append-nodes.html","searchKeys":["appendNodes","fun appendNodes(nodes: NodeList<T>, vararg path: Int): Boolean","com.github.treeBuilder.Tree.appendNodes"]},{"name":"fun atPath(index1: Int, vararg indices: Int, init: TreeNodeContext<T>.() -> Unit)","description":"com.github.treeBuilder.dsl.TreeBuilderContext.atPath","location":"-tree-builder/com.github.treeBuilder.dsl/-tree-builder-context/at-path.html","searchKeys":["atPath","fun atPath(index1: Int, vararg indices: Int, init: TreeNodeContext<T>.() -> Unit)","com.github.treeBuilder.dsl.TreeBuilderContext.atPath"]},{"name":"fun atRelativePath(index1: Int, vararg indices: Int, init: TreeNodeContext<T>.() -> Unit)","description":"com.github.treeBuilder.dsl.TreeNodeContext.atRelativePath","location":"-tree-builder/com.github.treeBuilder.dsl/-tree-node-context/at-relative-path.html","searchKeys":["atRelativePath","fun atRelativePath(index1: Int, vararg indices: Int, init: TreeNodeContext<T>.() -> Unit)","com.github.treeBuilder.dsl.TreeNodeContext.atRelativePath"]},{"name":"fun checkPath(path: List<Int>): Int","description":"com.github.treeBuilder.Tree.checkPath","location":"-tree-builder/com.github.treeBuilder/-tree/check-path.html","searchKeys":["checkPath","fun checkPath(path: List<Int>): Int","com.github.treeBuilder.Tree.checkPath"]},{"name":"fun checkPath(path: List<Int>): Int","description":"com.github.treeBuilder.TreeNode.checkPath","location":"-tree-builder/com.github.treeBuilder/-tree-node/check-path.html","searchKeys":["checkPath","fun checkPath(path: List<Int>): Int","com.github.treeBuilder.TreeNode.checkPath"]},{"name":"fun checkPath(vararg path: Int): Int","description":"com.github.treeBuilder.Tree.checkPath","location":"-tree-builder/com.github.treeBuilder/-tree/check-path.html","searchKeys":["checkPath","fun checkPath(vararg path: Int): Int","com.github.treeBuilder.Tree.checkPath"]},{"name":"fun checkPath(vararg path: Int): Int","description":"com.github.treeBuilder.TreeNode.checkPath","location":"-tree-builder/com.github.treeBuilder/-tree-node/check-path.html","searchKeys":["checkPath","fun checkPath(vararg path: Int): Int","com.github.treeBuilder.TreeNode.checkPath"]},{"name":"fun clone(): Tree<T>","description":"com.github.treeBuilder.Tree.clone","location":"-tree-builder/com.github.treeBuilder/-tree/clone.html","searchKeys":["clone","fun clone(): Tree<T>","com.github.treeBuilder.Tree.clone"]},{"name":"fun clone(): TreeNode<T>","description":"com.github.treeBuilder.TreeNode.clone","location":"-tree-builder/com.github.treeBuilder/-tree-node/clone.html","searchKeys":["clone","fun clone(): TreeNode<T>","com.github.treeBuilder.TreeNode.clone"]},{"name":"fun cursorAppendEmptyNodes(vararg names: String): Tree<T>","description":"com.github.treeBuilder.Tree.cursorAppendEmptyNodes","location":"-tree-builder/com.github.treeBuilder/-tree/cursor-append-empty-nodes.html","searchKeys":["cursorAppendEmptyNodes","fun cursorAppendEmptyNodes(vararg names: String): Tree<T>","com.github.treeBuilder.Tree.cursorAppendEmptyNodes"]},{"name":"fun cursorAppendNode(name: String, attributes: List<T> = listOf()): Tree<T>","description":"com.github.treeBuilder.Tree.cursorAppendNode","location":"-tree-builder/com.github.treeBuilder/-tree/cursor-append-node.html","searchKeys":["cursorAppendNode","fun cursorAppendNode(name: String, attributes: List<T> = listOf()): Tree<T>","com.github.treeBuilder.Tree.cursorAppendNode"]},{"name":"fun cursorAppendNode(node: TreeNode<T>): Tree<T>","description":"com.github.treeBuilder.Tree.cursorAppendNode","location":"-tree-builder/com.github.treeBuilder/-tree/cursor-append-node.html","searchKeys":["cursorAppendNode","fun cursorAppendNode(node: TreeNode<T>): Tree<T>","com.github.treeBuilder.Tree.cursorAppendNode"]},{"name":"fun cursorAppendNodes(nodes: NodeList<T>): Tree<T>","description":"com.github.treeBuilder.Tree.cursorAppendNodes","location":"-tree-builder/com.github.treeBuilder/-tree/cursor-append-nodes.html","searchKeys":["cursorAppendNodes","fun cursorAppendNodes(nodes: NodeList<T>): Tree<T>","com.github.treeBuilder.Tree.cursorAppendNodes"]},{"name":"fun cursorCheckMoveUp(n: Int): Boolean","description":"com.github.treeBuilder.Tree.cursorCheckMoveUp","location":"-tree-builder/com.github.treeBuilder/-tree/cursor-check-move-up.html","searchKeys":["cursorCheckMoveUp","fun cursorCheckMoveUp(n: Int): Boolean","com.github.treeBuilder.Tree.cursorCheckMoveUp"]},{"name":"fun cursorMoveToRoot(): Tree<T>","description":"com.github.treeBuilder.Tree.cursorMoveToRoot","location":"-tree-builder/com.github.treeBuilder/-tree/cursor-move-to-root.html","searchKeys":["cursorMoveToRoot","fun cursorMoveToRoot(): Tree<T>","com.github.treeBuilder.Tree.cursorMoveToRoot"]},{"name":"fun cursorMoveUp(): Boolean","description":"com.github.treeBuilder.Tree.cursorMoveUp","location":"-tree-builder/com.github.treeBuilder/-tree/cursor-move-up.html","searchKeys":["cursorMoveUp","fun cursorMoveUp(): Boolean","com.github.treeBuilder.Tree.cursorMoveUp"]},{"name":"fun cursorMoveUp(n: Int): Tree<T>","description":"com.github.treeBuilder.Tree.cursorMoveUp","location":"-tree-builder/com.github.treeBuilder/-tree/cursor-move-up.html","searchKeys":["cursorMoveUp","fun cursorMoveUp(n: Int): Tree<T>","com.github.treeBuilder.Tree.cursorMoveUp"]},{"name":"fun cursorSet(vararg path: Int): Tree<T>","description":"com.github.treeBuilder.Tree.cursorSet","location":"-tree-builder/com.github.treeBuilder/-tree/cursor-set.html","searchKeys":["cursorSet","fun cursorSet(vararg path: Int): Tree<T>","com.github.treeBuilder.Tree.cursorSet"]},{"name":"fun cursorSetRelative(vararg path: Int): Tree<T>","description":"com.github.treeBuilder.Tree.cursorSetRelative","location":"-tree-builder/com.github.treeBuilder/-tree/cursor-set-relative.html","searchKeys":["cursorSetRelative","fun cursorSetRelative(vararg path: Int): Tree<T>","com.github.treeBuilder.Tree.cursorSetRelative"]},{"name":"fun cursorSetWithResult(vararg path: Int): Int","description":"com.github.treeBuilder.Tree.cursorSetWithResult","location":"-tree-builder/com.github.treeBuilder/-tree/cursor-set-with-result.html","searchKeys":["cursorSetWithResult","fun cursorSetWithResult(vararg path: Int): Int","com.github.treeBuilder.Tree.cursorSetWithResult"]},{"name":"fun emptyNode(name: String)","description":"com.github.treeBuilder.dsl.TreeBuilderContext.emptyNode","location":"-tree-builder/com.github.treeBuilder.dsl/-tree-builder-context/empty-node.html","searchKeys":["emptyNode","fun emptyNode(name: String)","com.github.treeBuilder.dsl.TreeBuilderContext.emptyNode"]},{"name":"fun emptyNode(name: String)","description":"com.github.treeBuilder.dsl.TreeNodeContext.emptyNode","location":"-tree-builder/com.github.treeBuilder.dsl/-tree-node-context/empty-node.html","searchKeys":["emptyNode","fun emptyNode(name: String)","com.github.treeBuilder.dsl.TreeNodeContext.emptyNode"]},{"name":"fun emptyNodes(name1: String, vararg names: String): Int","description":"com.github.treeBuilder.dsl.TreeBuilderContext.emptyNodes","location":"-tree-builder/com.github.treeBuilder.dsl/-tree-builder-context/empty-nodes.html","searchKeys":["emptyNodes","fun emptyNodes(name1: String, vararg names: String): Int","com.github.treeBuilder.dsl.TreeBuilderContext.emptyNodes"]},{"name":"fun emptyNodes(name1: String, vararg names: String): Int","description":"com.github.treeBuilder.dsl.TreeNodeContext.emptyNodes","location":"-tree-builder/com.github.treeBuilder.dsl/-tree-node-context/empty-nodes.html","searchKeys":["emptyNodes","fun emptyNodes(name1: String, vararg names: String): Int","com.github.treeBuilder.dsl.TreeNodeContext.emptyNodes"]},{"name":"fun emptyNodes(names: List<String>): Int","description":"com.github.treeBuilder.dsl.TreeBuilderContext.emptyNodes","location":"-tree-builder/com.github.treeBuilder.dsl/-tree-builder-context/empty-nodes.html","searchKeys":["emptyNodes","fun emptyNodes(names: List<String>): Int","com.github.treeBuilder.dsl.TreeBuilderContext.emptyNodes"]},{"name":"fun emptyNodes(names: List<String>): Int","description":"com.github.treeBuilder.dsl.TreeNodeContext.emptyNodes","location":"-tree-builder/com.github.treeBuilder.dsl/-tree-node-context/empty-nodes.html","searchKeys":["emptyNodes","fun emptyNodes(names: List<String>): Int","com.github.treeBuilder.dsl.TreeNodeContext.emptyNodes"]},{"name":"fun getAllLeaves(): NodeList<T>","description":"com.github.treeBuilder.Tree.getAllLeaves","location":"-tree-builder/com.github.treeBuilder/-tree/get-all-leaves.html","searchKeys":["getAllLeaves","fun getAllLeaves(): NodeList<T>","com.github.treeBuilder.Tree.getAllLeaves"]},{"name":"fun getAllNodes(): NodeList<T>","description":"com.github.treeBuilder.Tree.getAllNodes","location":"-tree-builder/com.github.treeBuilder/-tree/get-all-nodes.html","searchKeys":["getAllNodes","fun getAllNodes(): NodeList<T>","com.github.treeBuilder.Tree.getAllNodes"]},{"name":"fun getNodeOrNull(path: List<Int>): TreeNode<T>?","description":"com.github.treeBuilder.Tree.getNodeOrNull","location":"-tree-builder/com.github.treeBuilder/-tree/get-node-or-null.html","searchKeys":["getNodeOrNull","fun getNodeOrNull(path: List<Int>): TreeNode<T>?","com.github.treeBuilder.Tree.getNodeOrNull"]},{"name":"fun getNodeOrNull(vararg path: Int): TreeNode<T>?","description":"com.github.treeBuilder.Tree.getNodeOrNull","location":"-tree-builder/com.github.treeBuilder/-tree/get-node-or-null.html","searchKeys":["getNodeOrNull","fun getNodeOrNull(vararg path: Int): TreeNode<T>?","com.github.treeBuilder.Tree.getNodeOrNull"]},{"name":"fun getNodeOrNull(vararg path: Int): TreeNode<T>?","description":"com.github.treeBuilder.TreeNode.getNodeOrNull","location":"-tree-builder/com.github.treeBuilder/-tree-node/get-node-or-null.html","searchKeys":["getNodeOrNull","fun getNodeOrNull(vararg path: Int): TreeNode<T>?","com.github.treeBuilder.TreeNode.getNodeOrNull"]},{"name":"fun getPath(): List<Int>","description":"com.github.treeBuilder.TreeNode.getPath","location":"-tree-builder/com.github.treeBuilder/-tree-node/get-path.html","searchKeys":["getPath","fun getPath(): List<Int>","com.github.treeBuilder.TreeNode.getPath"]},{"name":"fun getPathRec(): List<Int>","description":"com.github.treeBuilder.TreeNode.getPathRec","location":"-tree-builder/com.github.treeBuilder/-tree-node/get-path-rec.html","searchKeys":["getPathRec","fun getPathRec(): List<Int>","com.github.treeBuilder.TreeNode.getPathRec"]},{"name":"fun getRoot(): TreeNode<T>","description":"com.github.treeBuilder.TreeNode.getRoot","location":"-tree-builder/com.github.treeBuilder/-tree-node/get-root.html","searchKeys":["getRoot","fun getRoot(): TreeNode<T>","com.github.treeBuilder.TreeNode.getRoot"]},{"name":"fun hasChildAt(index: Int): Boolean","description":"com.github.treeBuilder.TreeNode.hasChildAt","location":"-tree-builder/com.github.treeBuilder/-tree-node/has-child-at.html","searchKeys":["hasChildAt","fun hasChildAt(index: Int): Boolean","com.github.treeBuilder.TreeNode.hasChildAt"]},{"name":"fun hasChildren(): Boolean","description":"com.github.treeBuilder.TreeNode.hasChildren","location":"-tree-builder/com.github.treeBuilder/-tree-node/has-children.html","searchKeys":["hasChildren","fun hasChildren(): Boolean","com.github.treeBuilder.TreeNode.hasChildren"]},{"name":"fun hasParent(): Boolean","description":"com.github.treeBuilder.TreeNode.hasParent","location":"-tree-builder/com.github.treeBuilder/-tree-node/has-parent.html","searchKeys":["hasParent","fun hasParent(): Boolean","com.github.treeBuilder.TreeNode.hasParent"]},{"name":"fun isValidPath(path: List<Int>): Boolean","description":"com.github.treeBuilder.Tree.isValidPath","location":"-tree-builder/com.github.treeBuilder/-tree/is-valid-path.html","searchKeys":["isValidPath","fun isValidPath(path: List<Int>): Boolean","com.github.treeBuilder.Tree.isValidPath"]},{"name":"fun isValidPath(path: List<Int>): Boolean","description":"com.github.treeBuilder.TreeNode.isValidPath","location":"-tree-builder/com.github.treeBuilder/-tree-node/is-valid-path.html","searchKeys":["isValidPath","fun isValidPath(path: List<Int>): Boolean","com.github.treeBuilder.TreeNode.isValidPath"]},{"name":"fun isValidPath(vararg path: Int): Boolean","description":"com.github.treeBuilder.Tree.isValidPath","location":"-tree-builder/com.github.treeBuilder/-tree/is-valid-path.html","searchKeys":["isValidPath","fun isValidPath(vararg path: Int): Boolean","com.github.treeBuilder.Tree.isValidPath"]},{"name":"fun isValidPath(vararg path: Int): Boolean","description":"com.github.treeBuilder.TreeNode.isValidPath","location":"-tree-builder/com.github.treeBuilder/-tree-node/is-valid-path.html","searchKeys":["isValidPath","fun isValidPath(vararg path: Int): Boolean","com.github.treeBuilder.TreeNode.isValidPath"]},{"name":"fun node(init: TreeNodeContext<T>.() -> Unit)","description":"com.github.treeBuilder.dsl.TreeBuilderContext.node","location":"-tree-builder/com.github.treeBuilder.dsl/-tree-builder-context/node.html","searchKeys":["node","fun node(init: TreeNodeContext<T>.() -> Unit)","com.github.treeBuilder.dsl.TreeBuilderContext.node"]},{"name":"fun node(init: TreeNodeContext<T>.() -> Unit)","description":"com.github.treeBuilder.dsl.TreeNodeContext.node","location":"-tree-builder/com.github.treeBuilder.dsl/-tree-node-context/node.html","searchKeys":["node","fun node(init: TreeNodeContext<T>.() -> Unit)","com.github.treeBuilder.dsl.TreeNodeContext.node"]},{"name":"fun node(name: String, attributes: List<T> = emptyList(), init: TreeNodeContext<T>.() -> Unit = {})","description":"com.github.treeBuilder.dsl.TreeBuilderContext.node","location":"-tree-builder/com.github.treeBuilder.dsl/-tree-builder-context/node.html","searchKeys":["node","fun node(name: String, attributes: List<T> = emptyList(), init: TreeNodeContext<T>.() -> Unit = {})","com.github.treeBuilder.dsl.TreeBuilderContext.node"]},{"name":"fun node(name: String, attributes: List<T> = emptyList(), init: TreeNodeContext<T>.() -> Unit)","description":"com.github.treeBuilder.dsl.TreeNodeContext.node","location":"-tree-builder/com.github.treeBuilder.dsl/-tree-node-context/node.html","searchKeys":["node","fun node(name: String, attributes: List<T> = emptyList(), init: TreeNodeContext<T>.() -> Unit)","com.github.treeBuilder.dsl.TreeNodeContext.node"]},{"name":"fun root(init: RootNodeContext<T>.() -> Unit)","description":"com.github.treeBuilder.dsl.TreeBuilderContext.root","location":"-tree-builder/com.github.treeBuilder.dsl/-tree-builder-context/root.html","searchKeys":["root","fun root(init: RootNodeContext<T>.() -> Unit)","com.github.treeBuilder.dsl.TreeBuilderContext.root"]},{"name":"fun root(name: String, attributes: List<T> = emptyList())","description":"com.github.treeBuilder.dsl.TreeBuilderContext.root","location":"-tree-builder/com.github.treeBuilder.dsl/-tree-builder-context/root.html","searchKeys":["root","fun root(name: String, attributes: List<T> = emptyList())","com.github.treeBuilder.dsl.TreeBuilderContext.root"]},{"name":"fun setAttributes(vararg attributes: T): TreeNode<T>","description":"com.github.treeBuilder.TreeNode.setAttributes","location":"-tree-builder/com.github.treeBuilder/-tree-node/set-attributes.html","searchKeys":["setAttributes","fun setAttributes(vararg attributes: T): TreeNode<T>","com.github.treeBuilder.TreeNode.setAttributes"]},{"name":"fun setName(name: String): TreeNode<T>","description":"com.github.treeBuilder.TreeNode.setName","location":"-tree-builder/com.github.treeBuilder/-tree-node/set-name.html","searchKeys":["setName","fun setName(name: String): TreeNode<T>","com.github.treeBuilder.TreeNode.setName"]},{"name":"fun setRootAttributes(attributes: List<T>): Tree<T>","description":"com.github.treeBuilder.Tree.setRootAttributes","location":"-tree-builder/com.github.treeBuilder/-tree/set-root-attributes.html","searchKeys":["setRootAttributes","fun setRootAttributes(attributes: List<T>): Tree<T>","com.github.treeBuilder.Tree.setRootAttributes"]},{"name":"fun setRootName(name: String): Tree<T>","description":"com.github.treeBuilder.Tree.setRootName","location":"-tree-builder/com.github.treeBuilder/-tree/set-root-name.html","searchKeys":["setRootName","fun setRootName(name: String): Tree<T>","com.github.treeBuilder.Tree.setRootName"]},{"name":"fun tryGetNode(vararg path: Int): TreeNode<T>","description":"com.github.treeBuilder.TreeNode.tryGetNode","location":"-tree-builder/com.github.treeBuilder/-tree-node/try-get-node.html","searchKeys":["tryGetNode","fun tryGetNode(vararg path: Int): TreeNode<T>","com.github.treeBuilder.TreeNode.tryGetNode"]},{"name":"infix operator fun plus(other: Path): Path","description":"com.github.treeBuilder.Path.plus","location":"-tree-builder/com.github.treeBuilder/-path/plus.html","searchKeys":["plus","infix operator fun plus(other: Path): Path","com.github.treeBuilder.Path.plus"]},{"name":"lateinit var treeRef: Tree<T>","description":"com.github.treeBuilder.TreeNode.treeRef","location":"-tree-builder/com.github.treeBuilder/-tree-node/tree-ref.html","searchKeys":["treeRef","lateinit var treeRef: Tree<T>","com.github.treeBuilder.TreeNode.treeRef"]},{"name":"object Companion","description":"com.github.treeBuilder.Path.Companion","location":"-tree-builder/com.github.treeBuilder/-path/-companion/index.html","searchKeys":["Companion","object Companion","com.github.treeBuilder.Path.Companion"]},{"name":"object Companion","description":"com.github.treeBuilder.Tree.Companion","location":"-tree-builder/com.github.treeBuilder/-tree/-companion/index.html","searchKeys":["Companion","object Companion","com.github.treeBuilder.Tree.Companion"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.treeBuilder.Path.equals","location":"-tree-builder/com.github.treeBuilder/-path/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.treeBuilder.Path.equals"]},{"name":"open override fun hashCode(): Int","description":"com.github.treeBuilder.Path.hashCode","location":"-tree-builder/com.github.treeBuilder/-path/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.treeBuilder.Path.hashCode"]},{"name":"open override var attributes: List<T>","description":"com.github.treeBuilder.dsl.TreeNodeContext.attributes","location":"-tree-builder/com.github.treeBuilder.dsl/-tree-node-context/attributes.html","searchKeys":["attributes","open override var attributes: List<T>","com.github.treeBuilder.dsl.TreeNodeContext.attributes"]},{"name":"open override var name: String","description":"com.github.treeBuilder.dsl.TreeNodeContext.name","location":"-tree-builder/com.github.treeBuilder.dsl/-tree-node-context/name.html","searchKeys":["name","open override var name: String","com.github.treeBuilder.dsl.TreeNodeContext.name"]},{"name":"typealias IntPath = List<Int>","description":"com.github.treeBuilder.IntPath","location":"-tree-builder/com.github.treeBuilder/-int-path/index.html","searchKeys":["IntPath","typealias IntPath = List<Int>","com.github.treeBuilder.IntPath"]},{"name":"typealias NodeList<T> = List<TreeNode<T>>","description":"com.github.treeBuilder.dsl.NodeList","location":"-tree-builder/com.github.treeBuilder.dsl/-node-list/index.html","searchKeys":["NodeList","typealias NodeList<T> = List<TreeNode<T>>","com.github.treeBuilder.dsl.NodeList"]},{"name":"val ROOT: Path","description":"com.github.treeBuilder.Path.Companion.ROOT","location":"-tree-builder/com.github.treeBuilder/-path/-companion/-r-o-o-t.html","searchKeys":["ROOT","val ROOT: Path","com.github.treeBuilder.Path.Companion.ROOT"]},{"name":"val RootPath: List<Int>","description":"com.github.treeBuilder.Tree.Companion.RootPath","location":"-tree-builder/com.github.treeBuilder/-tree/-companion/-root-path.html","searchKeys":["RootPath","val RootPath: List<Int>","com.github.treeBuilder.Tree.Companion.RootPath"]},{"name":"val cursorIsAtRoot: Boolean","description":"com.github.treeBuilder.Tree.cursorIsAtRoot","location":"-tree-builder/com.github.treeBuilder/-tree/cursor-is-at-root.html","searchKeys":["cursorIsAtRoot","val cursorIsAtRoot: Boolean","com.github.treeBuilder.Tree.cursorIsAtRoot"]},{"name":"val cursorNode: TreeNode<T>","description":"com.github.treeBuilder.Tree.cursorNode","location":"-tree-builder/com.github.treeBuilder/-tree/cursor-node.html","searchKeys":["cursorNode","val cursorNode: TreeNode<T>","com.github.treeBuilder.Tree.cursorNode"]},{"name":"var attributes: List<T>","description":"com.github.treeBuilder.TreeNode.attributes","location":"-tree-builder/com.github.treeBuilder/-tree-node/attributes.html","searchKeys":["attributes","var attributes: List<T>","com.github.treeBuilder.TreeNode.attributes"]},{"name":"var attributes: List<T>","description":"com.github.treeBuilder.dsl.RootNodeContext.attributes","location":"-tree-builder/com.github.treeBuilder.dsl/-root-node-context/attributes.html","searchKeys":["attributes","var attributes: List<T>","com.github.treeBuilder.dsl.RootNodeContext.attributes"]},{"name":"var childLowestIndex: Int","description":"com.github.treeBuilder.TreeNode.childLowestIndex","location":"-tree-builder/com.github.treeBuilder/-tree-node/child-lowest-index.html","searchKeys":["childLowestIndex","var childLowestIndex: Int","com.github.treeBuilder.TreeNode.childLowestIndex"]},{"name":"var children: NodeList<T>","description":"com.github.treeBuilder.TreeNode.children","location":"-tree-builder/com.github.treeBuilder/-tree-node/children.html","searchKeys":["children","var children: NodeList<T>","com.github.treeBuilder.TreeNode.children"]},{"name":"var cursorPath: List<Int>","description":"com.github.treeBuilder.Tree.cursorPath","location":"-tree-builder/com.github.treeBuilder/-tree/cursor-path.html","searchKeys":["cursorPath","var cursorPath: List<Int>","com.github.treeBuilder.Tree.cursorPath"]},{"name":"var depth: Int","description":"com.github.treeBuilder.TreeNode.depth","location":"-tree-builder/com.github.treeBuilder/-tree-node/depth.html","searchKeys":["depth","var depth: Int","com.github.treeBuilder.TreeNode.depth"]},{"name":"var index: Int","description":"com.github.treeBuilder.TreeNode.index","location":"-tree-builder/com.github.treeBuilder/-tree-node/--index--.html","searchKeys":["index","var index: Int","com.github.treeBuilder.TreeNode.index"]},{"name":"var name: String","description":"com.github.treeBuilder.TreeNode.name","location":"-tree-builder/com.github.treeBuilder/-tree-node/name.html","searchKeys":["name","var name: String","com.github.treeBuilder.TreeNode.name"]},{"name":"var name: String","description":"com.github.treeBuilder.dsl.RootNodeContext.name","location":"-tree-builder/com.github.treeBuilder.dsl/-root-node-context/name.html","searchKeys":["name","var name: String","com.github.treeBuilder.dsl.RootNodeContext.name"]},{"name":"var parent: TreeNode<T>?","description":"com.github.treeBuilder.TreeNode.parent","location":"-tree-builder/com.github.treeBuilder/-tree-node/parent.html","searchKeys":["parent","var parent: TreeNode<T>?","com.github.treeBuilder.TreeNode.parent"]},{"name":"var root: TreeNode<T>","description":"com.github.treeBuilder.Tree.root","location":"-tree-builder/com.github.treeBuilder/-tree/root.html","searchKeys":["root","var root: TreeNode<T>","com.github.treeBuilder.Tree.root"]},{"name":"var rootNode: TreeNode<T>?","description":"com.github.treeBuilder.dsl.TreeBuilderContext.rootNode","location":"-tree-builder/com.github.treeBuilder.dsl/-tree-builder-context/root-node.html","searchKeys":["rootNode","var rootNode: TreeNode<T>?","com.github.treeBuilder.dsl.TreeBuilderContext.rootNode"]},{"name":"var treeName: String","description":"com.github.treeBuilder.Tree.treeName","location":"-tree-builder/com.github.treeBuilder/-tree/tree-name.html","searchKeys":["treeName","var treeName: String","com.github.treeBuilder.Tree.treeName"]},{"name":"var treeName: String?","description":"com.github.treeBuilder.dsl.TreeBuilderContext.treeName","location":"-tree-builder/com.github.treeBuilder.dsl/-tree-builder-context/tree-name.html","searchKeys":["treeName","var treeName: String?","com.github.treeBuilder.dsl.TreeBuilderContext.treeName"]}]